<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.github.fherbreteau</groupId>
    <artifactId>functional-spring-boot</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>Functional Spring Boot</name>
    <description>Sample Spring Boot Project using DDD and Functional Programming style</description>
    <url>${project.scm.url}</url>

    <modules>
        <module>functional-domain</module>
        <module>functional-infra</module>
        <module>functional-app</module>
        <module>functional-check</module>
    </modules>

    <properties>
        <java.version>17</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>

        <!-- Spring Dependencies versions -->
        <spring.version>3.3.1</spring.version>

        <!-- Test Dependencies versions -->
        <mockito.version>5.8.0</mockito.version>

        <!-- Database dependencies -->
        <liquibase.version>4.28.0</liquibase.version>
        <postgresql.version>42.7.3</postgresql.version>

        <!-- Password validity Checker -->
        <passay.version>1.6.4</passay.version>

        <java-diff-utils.version>4.12</java-diff-utils.version>

        <!-- Tests dependencies -->
        <jimfs.version>1.3.0</jimfs.version>
        <testcontainers.version>1.20.0</testcontainers.version>

        <!-- Tools dependencies -->
        <enforcer.version>3.3.0</enforcer.version>
        <compiler.version>3.13.0</compiler.version>
        <jacoco.version>0.8.12</jacoco.version>
        <checkstyle-maven.version>3.4.0</checkstyle-maven.version>
        <checkstyle.version>10.17.0</checkstyle.version>
        <surefire.version>3.3.0</surefire.version>
        <pitest.version>1.16.1</pitest.version>
        <pitest-junit5.version>1.2.1</pitest-junit5.version>
        <sonar.version>4.0.0.4121</sonar.version>

        <!-- Jacoco Coverage Ratio -->
        <jacoco.coverage.ratio>95%</jacoco.coverage.ratio>

        <!-- Mutation Testing configuration -->
        <pitest.fail-when-no-mutations>true</pitest.fail-when-no-mutations>

        <!-- Sonar configuration properties -->
        <sonar.organization>fherbreteau</sonar.organization>
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Spring Boot Dependencies -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Testcontainers Dependencies -->
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers-bom</artifactId>
                <version>${testcontainers.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Project Dependencies -->
            <dependency>
                <groupId>io.github.fherbreteau</groupId>
                <artifactId>functional-domain</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.github.fherbreteau</groupId>
                <artifactId>functional-infra</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.github.fherbreteau</groupId>
                <artifactId>functional-check</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- Other dependencies -->
            <dependency>
                <groupId>org.passay</groupId>
                <artifactId>passay</artifactId>
                <version>${passay.version}</version>
            </dependency>
            <dependency>
                <groupId>io.github.java-diff-utils</groupId>
                <artifactId>java-diff-utils</artifactId>
                <version>${java-diff-utils.version}</version>
            </dependency>

            <!-- Liquibase -->
            <dependency>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-core</artifactId>
                <version>${liquibase.version}</version>
            </dependency>
            <!-- Databases drivers -->
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.version}</version>
            </dependency>
            <!-- Test Dependencies -->
            <dependency>
                <groupId>com.google.jimfs</groupId>
                <artifactId>jimfs</artifactId>
                <version>${jimfs.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${compiler.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <compilerArgs>
                        <arg>-parameters</arg>
                    </compilerArgs>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <execution>
                        <id>before-unit-test-execution</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <propertyName>surefire.jacoco.args</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-merged-report</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
                            <formats>
                                <format>XML</format>
                                <format>HTML</format>
                            </formats>
                        </configuration>
                    </execution>
                    <execution>
                        <id>jacoco-check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <rule>
                                    <element>BUNDLE</element>
                                    <limits>
                                        <limit>
                                            <counter>INSTRUCTION</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${jacoco.coverage.ratio}</minimum>
                                        </limit>
                                        <limit>
                                            <counter>CLASS</counter>
                                            <value>MISSEDCOUNT</value>
                                            <maximum>0</maximum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                            <dataFile>${project.build.directory}/jacoco.exec</dataFile>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <excludes>
                        <exclude>**/*Application.class</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire.version}</version>
                <configuration>
                    <argLine>@{surefire.jacoco.args}</argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${checkstyle-maven.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>${checkstyle.version}</version>
                    </dependency>
                </dependencies>

                <configuration>
                    <configLocation>checkstyle.xml</configLocation>
                    <suppressionsLocation>checkstyle.suppression.xml</suppressionsLocation>
                </configuration>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>${sonar.version}</version>
            </plugin>
        </plugins>
    </build>

    <developers>
        <developer>
            <id>fherbreteau</id>
            <name>François Herbreteau</name>
            <email>fherbreteau@gmail.com</email>
            <roles>
                <role>Maintainer</role>
            </roles>
            <timezone>Europe/Paris</timezone>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:${project.scm.url}.git</connection>
        <developerConnection>scm:git:${project.scm.url}.git</developerConnection>
        <url>https://github.com/fherbreteau/functional-spring-boot</url>
        <tag>@{project.version}</tag>
    </scm>

    <licenses>
        <license>
            <name>MIT License</name>
            <url>http://www.opensource.org/licenses/mit-license.php</url>
        </license>
    </licenses>

    <profiles>
        <profile>
            <id>mutationTesting</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.pitest</groupId>
                        <artifactId>pitest-maven</artifactId>
                        <version>${pitest.version}</version>
                        <dependencies>
                            <dependency>
                                <groupId>org.pitest</groupId>
                                <artifactId>pitest-junit5-plugin</artifactId>
                                <version>${pitest-junit5.version}</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <id>pit-report</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>mutationCoverage</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <mutationThreshold>80</mutationThreshold>
                            <failWhenNoMutations>${pitest.fail-when-no-mutations}</failWhenNoMutations>
                            <excludedClasses>
                                <class>io.github.fherbreteau.functional.config.*</class>
                            </excludedClasses>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>